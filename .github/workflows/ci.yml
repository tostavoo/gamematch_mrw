name: CI/CD Pipeline - GameMatch

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: 🧪 Tests & Build
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: gamematch
          MYSQL_USER: gamematch_user
          MYSQL_PASSWORD: gamematch123
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🐍 Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: 📦 Instalar dependencias Python
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🗄️ Inicializar base de datos
        env:
          DB_USER: root
          DB_PASS: root
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_NAME: gamematch
        run: |
          mysql -h 127.0.0.1 -u root -proot gamematch < gamematch.sql

      - name: ⚙️ Iniciar Backend (FastAPI)
        env:
          JWT_SECRET: test_secret_key_for_ci
          DB_USER: root
          DB_PASS: root
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_NAME: gamematch
        run: |
          uvicorn app.api.main:app --host 0.0.0.0 --port 8000 &
          sleep 5

      - name: 🌐 Iniciar Frontend (Streamlit)
        env:
          BACKEND_URL: http://localhost:8000
        run: |
          streamlit run ui/app.py --server.port 8501 --server.address 0.0.0.0 &
          sleep 10

      - name: 🟢 Verificar servicios
        run: |
          curl --retry 5 --retry-delay 2 --retry-connrefused http://localhost:8000/health || exit 1
          curl --retry 5 --retry-delay 2 --retry-connrefused http://localhost:8501 || exit 1

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: 📦 Instalar Cypress
        run: npm ci

      - name: 🧪 Ejecutar tests E2E (Cypress)
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          headless: true
          config-file: cypress.config.js
        env:
          CYPRESS_BASE_URL: http://localhost:8501

      - name: 📸 Subir screenshots de fallos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          retention-days: 7

      - name: 📹 Subir videos de Cypress
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos
          retention-days: 7

  build-docker:
    name: 🐳 Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🐳 Build Docker image
        run: |
          docker-compose build --no-cache

      - name: ✅ Verificar imagen
        run: |
          docker images | grep gamematch
